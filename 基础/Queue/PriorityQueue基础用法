import java.util.Comparator;
import java.util.PriorityQueue;

public class text{ 
    //自定义降序比较器
    public static class cmp implements Comparator<Integer>{
        @Override
        public int compare(Integer o1, Integer o2) {
            return o2 - o1;
        }
    }

    public static void main(String[] args) {
        //测试系统默认排序方式（即小根堆）
        PriorityQueue<Integer> heap = new PriorityQueue<>();//若非Integer需要自己构建比较器
        heap.add(2);//添加元素
        heap.add(212);
        heap.add(23);
        heap.add(0);
        System.out.println(heap.poll());//返回堆首元素 并取出
        System.out.println(heap.peek());//返回堆首元素 不取出 因此输出结果为 0 2        System.out.println(heap.peek());
        System.out.println(heap.size());//判断元素个数
        System.out.println(heap.isEmpty());//判断是否为空
        heap.add(23);
        heap.add(0);
        System.out.println("使用系统默认堆排序");
        while (!heap.isEmpty()){
            System.out.print(heap.poll() + " ");//输出结果： 0 2 23 23 212
        }
        System.out.println();
        System.out.println("=============================");
        System.out.println("使用比较器后堆排序");
        PriorityQueue<Integer> heap1 = new PriorityQueue<>(new cmp());
        heap1.add(2);//添加元素
        heap1.add(212);
        heap1.add(23);
        heap1.add(23);
        heap1.add(0);
        while (!heap1.isEmpty()){
            System.out.print(heap1.poll() + " ");//输出结果： 0 2 23 23 212
        }
    }
}
