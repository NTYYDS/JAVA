/**
 * @author hongyi
 * @version 1.0
 */


package text;

public class Text 
{ 
	public static void main(String[] args) {
		T t1 = new T();
		t1.f2();
		t1.f3();
	}
}

class T{
	//this可以用来访问属性
	String name = "sdsd";
	int age = 100;
	//细节1：访问构造器语法：this（参数列表）即只能在构造器中访问另外一个构造器

	public T() {		
		//这里去访问T(String name, int age)	
		//注意：访问构造器语法：this（参数列表）；必须放在第一条语句
		this("skdjfh", 2132);
		System.out.println("T()构造器");

	}
	
	public T(String name, int age) {
		System.out.println("T(String name, int age)构造器");
	}
	//细节2：访问成员方法的语法：this.方法名（参数列表）
	public void f1(){
		System.out.println("f1()方法..");
	}
	
	public void f2(){
		System.out.println("f2()方法..");
		//调用本类的 f1
		//第一种方法：
		f1();
		//第二种方法：
		this.f1();
	}
	
	public void f3(){
		String name = "fgerwg";
		int age = 254;
		//由于运用了this，name和age访问的是类中的name和age，并不遵循就近原则
		System.out.println("name = " + this.name + "\n" + "age = " + this.age);
	}
}	
